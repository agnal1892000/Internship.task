1. Python program to Create a excel file .
code:
import openpyxl

workbook = openpyxl.Workbook()
sheet = workbook.active


sheet["A1"] = "Name"
sheet["B1"] = "Age"
sheet["C1"] = "City"

sheet["A2"] = "John"
sheet["B2"] = 25
sheet["C2"] = "New York"

sheet["A3"] = "Alice"
sheet["B3"] = 30
sheet["C3"] = "London"

workbook.save("sample.xlsx")

2. Python program for Import data from an excel file.
code:
import openpyxl


workbook = openpyxl.load_workbook('sample.xlsx')


sheet = workbook.active


for row in sheet.iter_rows(values_only=True):
    for cell in row:
        print(cell)
print("Value of cell A2:", sheet['A2'].value)
print("Value of cell B3:", sheet['B3'].value)

output:
Name
Age
City
John
25
New York
Alice
30
London
Value of cell A2: John
Value of cell B3: 30

3.  Python program for Format data in excel sheet 

code:
import openpyxl
from openpyxl.styles import Font, Alignment


workbook = openpyxl.load_workbook('sample.xlsx')


sheet = workbook.active

bold_font = Font(bold=True)
italic_font = Font(italic=True)
center_alignment = Alignment(horizontal='center')


sheet['A1'].font = bold_font
sheet['A1'].alignment = center_alignment

for row in sheet.iter_rows(min_row=2, min_col=2, max_col=2):
    for cell in row:
        cell.font = italic_font


workbook.save('formatted_sample.xlsx')

4. Python program for Prepare Yoshops Survey and Order excel charts Like = Pie Chart and Bar Chart Weekly, Monthly and Yearly Reports.
code:
import openpyxl
from openpyxl import Workbook
from openpyxl.chart import BarChart, PieChart, Reference


workbook = openpyxl.load_workbook('yoshops_data.xlsx')

survey_sheet = workbook['SurveyData']


order_sheet = workbook['OrderData']

survey_data = {}
for row in survey_sheet.iter_rows(min_row=2, values_only=True):
    date = row[0].date()  
    score = row[1]  

    week_number = date.isocalendar()[1]
    month = date.strftime('%B')
    year = date.year

    if week_number not in survey_data:
        survey_data[week_number] = {'week': week_number, 'scores': []}
    survey_data[week_number]['scores'].append(score)

    if month not in survey_data:
        survey_data[month] = {'month': month, 'scores': []}
    survey_data[month]['scores'].append(score)

    if year not in survey_data:
        survey_data[year] = {'year': year, 'scores': []}
    survey_data[year]['scores'].append(score)


order_data = {}
for row in order_sheet.iter_rows(min_row=2, values_only=True):
    date = row[0].date() 
    amount = row[1]  

    
    week_number = date.isocalendar()[1]
    month = date.strftime('%B')
    year = date.year

    if week_number not in order_data:
        order_data[week_number] = {'week': week_number, 'amounts': []}
    order_data[week_number]['amounts'].append(amount)

    if month not in order_data:
        order_data[month] = {'month': month, 'amounts': []}
    order_data[month]['amounts'].append(amount)

    if year not in order_data:
        order_data[year] = {'year': year, 'amounts': []}
    order_data[year]['amounts'].append(amount)


weekly_survey_chart = PieChart()
labels = Reference(survey_sheet, min_col=1, min_row=2, max_row=survey_sheet.max_row)
data = Reference(survey_sheet, min_col=2, min_row=1, max_row=survey_sheet.max_row)
weekly_survey_chart.add_data(data, titles_from_data=True)
weekly_survey_chart.set_categories(labels)
weekly_survey_chart.title = "Weekly Survey Report"
weekly_survey_chart_sheet = workbook.create_sheet(title="Weekly Survey Chart")
weekly_survey_chart_sheet.add_chart(weekly_survey_chart, "A1")


monthly_order_chart = BarChart()
labels = Reference(order_sheet, min_col=1, min_row=2, max_row=order_sheet.max_row)
data = Reference(order_sheet, min_col=2, min_row=1, max_row=order_sheet.max_row)
monthly_order_chart.add_data(data, titles_from_data=True)
monthly_order_chart.set_categories(labels)
monthly_order_chart.title = "Monthly Order Report"
monthly_order_chart_sheet = workbook.create_sheet(title="Monthly Order Chart")
monthly_order_chart_sheet.add_chart(monthly_order_chart, "A1")

workbook.save('yoshops_reports.xlsx')


5. Python program for Extract mobile no from PDF, Json,XML and MS word file and save into MS excel.
code:
import os
import json
import xml.etree.ElementTree as ET
import docx
import openpyxl


def extract_mobile_numbers_from_pdf(pdf_file_path):
    import pdfplumber

    mobile_numbers = []
    with pdfplumber.open(pdf_file_path) as pdf:
        for page in pdf.pages:
            text = page.extract_text()
            numbers = re.findall(r"\b\d{10}\b", text)  # Assuming mobile numbers are 10 digits long
            mobile_numbers.extend(numbers)

    return mobile_numbers


def extract_mobile_numbers_from_json(json_file_path):
    mobile_numbers = []
    with open(json_file_path) as file:
        data = json.load(file)
        for item in data:
            if "mobile_number" in item:
                mobile_numbers.append(item["mobile_number"])

    return mobile_numbers

def extract_mobile_numbers_from_xml(xml_file_path):
    mobile_numbers = []
    tree = ET.parse(xml_file_path)
    root = tree.getroot()
    for element in root.iter("mobile_number"):
        mobile_numbers.append(element.text)

    return mobile_numbers


def extract_mobile_numbers_from_word(word_file_path):
    mobile_numbers = []
    doc = docx.Document(word_file_path)
    for paragraph in doc.paragraphs:
        numbers = re.findall(r"\b\d{10}\b", paragraph.text)  # Assuming mobile numbers are 10 digits long
        mobile_numbers.extend(numbers)

    return mobile_numbers


def save_mobile_numbers_to_excel(mobile_numbers, excel_file_path):
    workbook = openpyxl.Workbook()
    sheet = workbook.active

    sheet['A1'] = 'Mobile Numbers'

    for i, number in enumerate(mobile_numbers, start=2):
        sheet[f'A{i}'] = number

    workbook.save(excel_file_path)


pdf_file = 'sample.pdf'
json_file = 'sample.json'
xml_file = 'sample.xml'
word_file = 'sample.docx'
excel_file = 'mobile_numbers.xlsx'

mobile_numbers = []


if os.path.exists(pdf_file):
    pdf_mobile_numbers = extract_mobile_numbers_from_pdf(pdf_file)
    mobile_numbers.extend(pdf_mobile_numbers)

if os.path.exists(json_file):
    json_mobile_numbers = extract_mobile_numbers_from_json(json_file)
    mobile_numbers.extend(json_mobile_numbers)


if os.path.exists(xml_file):
    xml_mobile_numbers = extract_mobile_numbers_from_xml(xml_file)
    mobile_numbers.extend(xml_mobile_numbers)

if os.path.exists(word_file):
    word_mobile_numbers = extract_mobile_numbers_from_word(word_file)
    mobile_numbers.extend(word_mobile_numbers)

if mobile_numbers:
    save_mobile_numbers_to_excel(mobile_numbers, excel_file)
    print("Mobile numbers saved to Excel file.")
else:
    print("No mobile numbers found.")



6.Prepare python programm for data cleaning process to removing unnecessary data.
code:
import pandas as pd


data = pd.read_csv('data.csv')


print("Initial data:")
print(data)


data = data.drop_duplicates()


data = data.dropna()


columns_to_drop = ['column1', 'column2']  
data = data.drop(columns=columns_to_drop)


print("\nCleaned data:")
print(data)

data.to_csv('cleaned_data.csv', index=False)
